Title:P
Crumbs:Shared/Glossary
Description:
Availability:Public

[EXCERPT:Glossary_P]

[OBJECT:GlossaryItem]
	[PARAM:Term]
panel
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_panel]
A **panel** is a part of the UI that contains information about your level and can be moved, docked, or dragged into a separate window. Examples include the **Details** panel and the **Content Browser**.
[/EXCERPT:Glossary_panel]

	[/PARAM]
[/OBJECT]



[OBJECT:GlossaryItem]
	[PARAM:Term]
Pawn 
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_pawn]
A **Pawn** is a subclass of Actor that serves as an in-game avatar or persona, such as characters in a game. Pawns can be controlled by a player or by the game's AI, such as in the case of non-player characters (NPCs).
[/EXCERPT:Glossary_pawn]

	[/PARAM]
[/OBJECT]



[OBJECT:GlossaryItem]
	[PARAM:Term]
Persona
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_Persona]
**Persona** is the animation editing toolset within Unreal. It is a robust system for editing Skeletons, Skeletal Meshes, Animation Blueprints, and various other animation assets. Most (if not all) of your animation work within Unreal will take place in this editor. This is a multi-purpose tool that contains panels for editing skeletal [Sockets](Engine/Content\Types\SkeletalMeshes\Sockets), previewing [Animation Sequences](Engine/Animation/Sequences), setting up animation [Blend Spaces](Engine/Animation/Blendspaces) and [Montages](Engine/Animation/AnimMontage), editing [Animation Blueprints](Engine/Animation/AnimBlueprints), and much more.
[/EXCERPT:Glossary_Persona]

You can open Persona by **double-clicking** any animation-related asset, such as Skeletal Meshes, Blend Spaces, Animation Blueprints, and so on.

	[/PARAM]
[/OBJECT]



[OBJECT:GlossaryItem]
	[PARAM:Term]
PhAT
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_PhAT]
**PhAT**, the Physics Asset editing tool in the Unreal Editor, is used to modify physics and collision properties for Skeletal Mesh Actors.
[/EXCERPT:Glossary_PhAT]

	[/PARAM]
[/OBJECT]



[OBJECT:GlossaryItem]
	[PARAM:Term]
Physical Material
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_Physical_Material]
**Physical Materials** are used to define the response of a physical object when interacting dynamically with the world.  Physical Materials are fairly easy to use.  Creating one will give you a set of default values, identical to the default physical material that is applied to all physics objects.  Examples of this would be a character's dead body (ragdoll), a movable crate, and so on.
[/EXCERPT:Glossary_Physical_Material]

	[/PARAM]
[/OBJECT]



[OBJECT:GlossaryItem]
	[PARAM:Term]
pin
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_pin]
A **pin** is part of a visual scripting node. Pins connect to other nodes via wires. Execution pins must be hooked up in order for a node to execute. Data pins are color-coded according to type, and are used to input data from or output data to other nodes.
[/EXCERPT:Glossary_pin]

	[/PARAM]
[/OBJECT]



[OBJECT:GlossaryItem]
	[PARAM:Term]
pivot point
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_pivot_point]
The **pivot point** (or origin point) indicates the location on a Static Mesh Actor or a Skeletal Mesh Actor that has been defined in the 3D modeling program in which it was created as the object's base for alignment purposes. The pivot point can be in the center of an object, at its base, or even outside it.
[/EXCERPT:Glossary_pivot_point]

	[/PARAM]
[/OBJECT]



[OBJECT:GlossaryItem]
	[PARAM:Term]
Play In Editor (PIE)
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_Play_In_Editor]
**Play In Editor (PIE)** is a mode in which you can play your level directly in the Unreal Editor window, starting in a location you specify, for testing purposes. In this mode, you can play the current level exactly as it would play in-game, so that you can test gameplay functionality, including player controls and level events triggered by players' actions.
[/EXCERPT:Glossary_Play_In_Editor]

	[/PARAM]
[/OBJECT]



[OBJECT:GlossaryItem]
	[PARAM:Term]
project
	[/PARAM]
	[PARAM:Definition]

[EXCERPT:Glossary_project]
In Unreal Engine, each game you create is a **project**. Projects are self-contained units that hold all of 
the content and code that make up an individual game. You can create, maintain, and develop any number of 
projects in parallel, and the Engine and Editor can easily switch between projects. This makes it easy for 
developers to work on multiple games at once or have several test projects in addition to their main game 
project. 
[/EXCERPT:Glossary_project]

	[/PARAM]
[/OBJECT]

[/EXCERPT:Glossary_P]
